{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\Test_code\\\\web3_swap_main\\\\frontend\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Logo from '../moralis-logo.svg';\nimport eth from '../eth.svg';\nimport bnb from '../bnb-bnb-logo.svg';\nimport { Link } from 'react-router-dom';\nimport { Select } from 'antd';\nimport { Dropdown, Space } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header(props) {\n  _s();\n  const {\n    connect,\n    isConnected,\n    address\n  } = props;\n  const [selectedNetwork, setSelectedNetwork] = useState({\n    value: \"Ethereum\",\n    logo: eth\n  });\n  const handleNetworkChange = key => {\n    console.log(`Selected network: ${key}`);\n    if (key === \"ETH\") {\n      setSelectedNetwork({\n        value: \"Ethereum\",\n        logo: eth\n      });\n    } else if (key === \"BNB\") {\n      setSelectedNetwork({\n        value: \"BNB Chain\",\n        logo: bnb\n      });\n    }\n  };\n  const items = [{\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerItemNetWork\",\n      onClick: () => handleNetworkChange(\"ETH\"),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: eth,\n        alt: \"Ethereum logo\",\n        className: \"eth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), \"Ethereum\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this),\n    key: 'ETH'\n  }, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerItemNetWork\",\n      onClick: () => handleNetworkChange(\"BNB\"),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bnb,\n        alt: \"BNB logo\",\n        style: {\n          width: 23,\n          height: 23\n        },\n        className: \"eth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), \"BNB Chain\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this),\n    key: 'BNB'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftH\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/public/image/\",\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/token\",\n        className: \"link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerItem\",\n          children: \"Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerItem\",\n          children: \"Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightH\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        menu: {\n          items\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headerItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedNetwork.logo,\n              alt: `${selectedNetwork.value} logo`,\n              style: {\n                width: 23,\n                height: 23\n              },\n              className: \"eth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), selectedNetwork.value, \" \", /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectButton\",\n        onClick: connect,\n        children: isConnected ? address.slice(0, 4) + \"...\" + address.slice(38) : \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"WCwAXU5geVIlGQtLzGV5fIE1+6Q=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Logo","eth","bnb","Link","Select","Dropdown","Space","DownOutlined","Header","props","connect","isConnected","address","selectedNetwork","setSelectedNetwork","value","logo","handleNetworkChange","key","console","log","items","label","width","height","e","preventDefault","slice"],"sources":["C:/Users/USER/Downloads/Test_code/web3_swap_main/frontend/src/components/Header.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Logo from '../moralis-logo.svg'\r\nimport eth from '../eth.svg'\r\nimport bnb from '../bnb-bnb-logo.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { Select } from 'antd';\r\nimport { Dropdown, Space } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nfunction Header(props) {\r\n\r\n  const { connect, isConnected, address } = props\r\n\r\n  const [selectedNetwork, setSelectedNetwork] = useState({\r\n    value: \"Ethereum\",\r\n    logo: eth,\r\n  });\r\n\r\n  const handleNetworkChange = (key) => {\r\n    console.log(`Selected network: ${key}`);\r\n    if (key === \"ETH\") {\r\n      setSelectedNetwork({ value: \"Ethereum\", logo: eth });\r\n    } else if (key === \"BNB\") {\r\n      setSelectedNetwork({ value: \"BNB Chain\", logo: bnb });\r\n    }\r\n  };\r\n\r\n  const items = [\r\n    {\r\n      label: (\r\n        <div className='headerItemNetWork' onClick={() => handleNetworkChange(\"ETH\")}>\r\n          <img src={eth} alt='Ethereum logo' className='eth' />\r\n          Ethereum\r\n        </div>\r\n      ),\r\n      key: 'ETH',\r\n    },\r\n    {\r\n      label: (\r\n        <div className='headerItemNetWork' onClick={() => handleNetworkChange(\"BNB\")}>\r\n          <img src={bnb} alt='BNB logo' style={{ width: 23, height: 23 }} className='eth' />\r\n          BNB Chain\r\n        </div>\r\n      ),\r\n      key: 'BNB',\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <header>\r\n      <div className='leftH'>\r\n        <img src='/public/image/' alt='logo' className='logo' />\r\n        <Link to='/token' className='link'>\r\n          <div className='headerItem'>Tokens</div>\r\n        </Link>\r\n        <Link to='/' className='link'>\r\n          <div className='headerItem'>Swap</div>\r\n        </Link>\r\n\r\n      </div>\r\n      <div className='rightH'>\r\n        {/* <div className='headerItem'>\r\n          <img src={eth} alt='logo' className='eth' />\r\n          Ethereum\r\n        </div> */}\r\n        <Dropdown\r\n          menu={{\r\n            items,\r\n          }}\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <div className='headerItem'>\r\n              <img src={selectedNetwork.logo} alt={`${selectedNetwork.value} logo`} style={{ width: 23, height: 23 }} className='eth' />\r\n              {selectedNetwork.value} <DownOutlined />\r\n            </div>\r\n          </a>\r\n        </Dropdown>\r\n        <div className='connectButton' onClick={connect}>\r\n          {isConnected ? (address.slice(0, 4) + \"...\" + address.slice(38)) : \"Connect\"}\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}